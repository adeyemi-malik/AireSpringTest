@using X.PagedList
@using X.PagedList.Mvc.Core
@model SearchModel<EmployeeViewModel>

@{
    ViewData["Title"] = "Employees";
}

<div class="text-center">
    <h2 class="display-4">Welcome to AireSpring</h2>
    <p>List of employees</p>
</div>
<div class="d-flex justify-content-center align-items-center container">
    <div class="row">
        <table class="table table-responsive">
            <thead>
                <tr>
                    <th>EmployeeCode</th>
                    <th>FirstName</th>
                    <th>LastName</th>
                    <th>PhoneNumber</th>
                    <th>ZipCode</th>
                    <th>HireDate</th>
                </tr>
            </thead>
            <tbody id="tbody">
                @foreach (var item in Model.Items)
                {
                    <tr>
                        <td>@item.EmployeeCode</td>
                        <td>@item.FirstName</td>
                        <td>@item.LastName</td>
                        <td>@item.PhoneNumber</td>
                        <td>@item.ZipCode</td>
                        <td>@item.HireDate.ToString("MM/dd/yyyy")</td>
                    </tr>
                }
            </tbody>
        </table>
        @Html.PagedListPager(new StaticPagedList<EmployeeViewModel>(Model.Items, Model.Page, Model.Limit, Model.TotalItems), page => Url.Action("employees", new {page, filter = Model.Filter, limit = Model.Limit }))
    </div>
</div>

